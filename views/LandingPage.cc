//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "LandingPage.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string LandingPage::genText(const DrTemplateData& LandingPage_view_data)
{
	drogon::OStringStream LandingPage_tmp_stream;
	std::string layoutName{""};
	LandingPage_tmp_stream << "<!doctype html>\n";
	LandingPage_tmp_stream << "<html lang=\"en\">\n";
	LandingPage_tmp_stream << "  <head>\n";
	LandingPage_tmp_stream << "      <meta charset=\"utf-8\">\n";
	LandingPage_tmp_stream << "          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n";
	LandingPage_tmp_stream << "	      <title>Bootstrap demo</title>\n";
	LandingPage_tmp_stream << "	          <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n";
	LandingPage_tmp_stream << "		    </head>\n";
	LandingPage_tmp_stream << "		      <body>\n";
	LandingPage_tmp_stream << "		          <h1>Hello, world!</h1>\n";
	LandingPage_tmp_stream << "			      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n";
	LandingPage_tmp_stream << "			        </body>\n";
	LandingPage_tmp_stream << "				</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(LandingPage_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = LandingPage_view_data;
auto str = std::move(LandingPage_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
